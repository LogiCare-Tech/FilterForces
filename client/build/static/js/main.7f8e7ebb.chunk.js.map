{"version":3,"sources":["components/Training/DisplayList.js","contexts/UserContext.js","components/header/Header.js","utils/notification/Notification.js","components/body/auth/Login.js","utils/validation/Validation.js","components/body/auth/Register.js","components/body/auth/ActivationEmail.js","components/Training/Train.js","components/Visualizer/Heatmap.js","components/Visualizer/Histogram_RatingWise.js","components/Visualizer/Doughnut.js","components/Visualizer/Overlay.js","components/Visualizer/Resume.js","components/notFound/NotFound.js","components/forgotPassword/ForgotPassword.js","components/forgotPassword/ResetPassword.js","Assets/VizSvg.svg","Assets/TrainSvg.svg","Assets/Faltu.svg","components/HomePage.js","components/body/Body.js","App.js","index.js"],"names":["tagDisplay","UserContext","createContext","initialState","name","email","password","err","success","UserProvider","props","useState","user","setUser","loginState","setLoginState","accessKey","setAccessKey","Provider","value","USER","LOGIN_STATE","ACCESS_KEY","children","Header","useContext","handleLogout","a","axios","get","localStorage","removeItem","window","location","href","className","to","style","width","src","alt","onClick","showErrMsg","msg","showSuccessMsg","Login","handleChangeInput","e","target","handleSubmit","preventDefault","post","res","setItem","data","response","onSubmit","htmlFor","type","placeholder","id","onChange","isEmpty","isEmail","test","String","toLowerCase","isLength","length","isMatch","cf_password","username","Register","ActivationEmail","activation_token","useParams","setErr","setSuccess","useEffect","activationEmail","Display","showTag","INFO","getSolvedNumber","stats","filter","info","Number","contestId","index","solvedCount","checkAppropriateColor","personalInfo","isElementPresent","problem","verdict","map","inf","rel","display","tags","topic","rating","Train","handle","setHandle","listHandle","setListHandle","updatedSet","setUpdate","triggerRender","useRef","startRange","setStartRange","endRange","setEndRange","ladderInputField","setLadderField","allHandlePsetInfo","setPsetInfo","personalHandle","setPersonalHandle","personalPsetOnCf","setPersonalPsetOnCf","allPset","setAllPset","allTags","setAllTags","allLadder","setAllLadder","permission","setPermission","setShowTag","contentPset","setContentPset","notification","setNotification","currentLadder","setCurrentLadder","currentTopics","setCurrentTopics","currentRange","setCurrentRange","setDisplay","topicOverlay","setTopciOverlay","filterTagPset","setFilterTagPset","AllTags","AllLadder","sets","result","problems","i","j","includes","push","problemStatistics","find","priorityPset","Map","current","set","flag","tag","Priority","values","listToDisplay","maxVotes","Math","max","StopDuplicates","obj","JSON","stringify","general","handleAdminUsername","event","setTimeout","handleAddPerson","handles","alreadyExistingProblemSet","ProblemSetInfo","list","newGuy","individualPset","contentStyle","OverlayStyle","backgroundColor","listLadder","handleRemoveLadder","listTopics","handleRemoveTopic","updatedObject","psetHolder","x","handleRemovePerson","flexDirection","handleStartRange","handleEndRange","justifyContent","flexWrap","console","log","handleTopicSubmit","margin","handleLadderChange","prevLadder","handleAddLadder","prevTopics","handleAddTopic","ladders","marginLeft","marginRight","color","textAlign","marginTop","handlePersonalHandle","HeatMap","optionWise","DateWise","setDate","year","setYear","randomValues","date","count","reverse","options","defaultValue","label","option","startDate","Date","endDate","gutterSize","classForValue","tooltipDataAttrs","da","split","showWeekdayLabels","handleOverlay","rainbow","numOfSteps","step","r","g","b","h","f","q","alert","toString","slice","Histogram","AvgTime","COLOR_First","COLOR_Second","RatingInfo","time","ceil","RatingWiseAvg","minutes","AvgTimeType","TYPES","TypeInfo","sort","TypeWiseAvg","labels","datasets","borderWidth","borderColor","maintainAspectRation","responsive","plugins","legend","title","text","fontSize","Doughnuts","AvgTimeTopic","COLOR","TopicInfo","TopicWiseAvg","position","Overlay","Resume","HANDLE","setDateWise","YearInfo","setYearInfo","setOptionWise","setRatingInfo","setTopicInfo","setTypeInfo","setRatingWiseAvg","setTopicWiseAvg","setTypeWiseAvg","SendRequest","Description","YEAR","Set","RATING","TOPIC","TYPE","AvgRatingTime","AvgTopicTime","AvgTypeTime","getVisualizationInfo","add","creationTimeSeconds","getFullYear","author","participantType","relativeTimeSeconds","Key_Format","getMonth","getDate","optionHolder","keys","handleChange","Doughnut","NotFound","ForgotPassword","ResetPassword","setPassword","setCfPassword","access_token","headers","HomePage","frameBorder","allow","Faltu","TrainSvg","VizSvg","Body","path","component","exact","App","getItem","dummy","Rand","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f8e7ebb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nlet tagDisplay\r\nconst Display = (props) => {\r\n    if(props.showTag === \"Hide the tag\")\r\n    {\r\n        tagDisplay = \"block\"\r\n    }\r\n    else{\r\n        tagDisplay = \"none\"\r\n    }\r\n    const getSolvedNumber = (INFO) => {\r\n      const stats = props.stats.filter((info) => ((Number(INFO.contestId) === Number(info.contestId)) && (String(INFO.index) ===String(info.index))))\r\n    \r\n      if(stats[0])\r\n      {\r\n          let obj = stats[0]\r\n          \r\n          return obj.solvedCount\r\n      }\r\n        else{\r\n           //Unusual behaviour\r\n           //Potential bug \r\n            return \"Unavailable\"\r\n        }\r\n   \r\n            \r\n    }\r\n    const checkAppropriateColor = (INFO) => {\r\n       \r\n        \r\n      if(props.personalInfo.length)\r\n      {\r\n          \r\n       \r\n       \r\n        const isElementPresent = props.personalInfo.filter((info) => ((info.problem.contestId === INFO.contestId) && (info.problem.index === INFO.index)))\r\n        \r\n        if(!isElementPresent[0])\r\n        {\r\n            return \"TYPE\"\r\n        }\r\n        else{\r\n           if(isElementPresent[0].verdict === 'OK')\r\n           {\r\n               return \"Positive TYPE\"\r\n           }\r\n        }\r\n          return \"Negative TYPE\"\r\n      }\r\n      return \"\"\r\n      \r\n        \r\n    }\r\n        const list = (INFO) => {\r\n            \r\n            const data = INFO.map((inf, index) => {\r\n                return (\r\n                    <tr key={index}  >\r\n                      \r\n                        <td className={checkAppropriateColor(inf)}>\r\n                            {inf.index}\r\n                        </td>\r\n                        <td className = \"Middle\">\r\n                            <div className = \"psetDisplayStyle\">\r\n                            <a href = {`https://codeforces.com/problemset/problem/${inf.contestId}/${inf.index}` } target=\"_blank\" rel=\"noopener noreferrer\" className = \"PROBLEM\">{inf.name}</a> <span className =\"smallTagDisplay\" style = {{display: tagDisplay}}>{[inf.tags.map((topic)=>`${topic}; `) ]}</span>\r\n                            </div>\r\n                        </td>\r\n                        <td className = \"RATING\">{inf.rating}</td>\r\n                        <td className = \"NumberOfPpl\">🤺 x{getSolvedNumber(inf)}</td>\r\n                    </tr>\r\n                    \r\n                )\r\n\r\n            })\r\n            return data\r\n        }\r\n        return (\r\n            \r\n                   \r\n            <div className = \"TABLE\">\r\n               \r\n                 <table className=\"ui celled table unstackable\" >\r\n        \r\n                    <thead>\r\n                        <tr>\r\n                            <th><h2>#</h2></th>\r\n                            <th ><h2>Problem   </h2> </th>\r\n                            <th ><h2>Rating</h2></th>\r\n                            <th ><i className=\"iconTick\"/></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {\r\n\r\n                            list(props.info)\r\n                        }\r\n\r\n                    </tbody>\r\n                </table> \r\n            </div>\r\n            \r\n        )\r\n    }\r\n    export default Display","\r\nimport React, {createContext, useState} from \"react\"\r\nexport const UserContext = createContext()\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\nexport const UserProvider = (props)=>{\r\n    const [user, setUser]= useState(initialState)\r\n    const [loginState, setLoginState] = useState(false)\r\n   const [accessKey, setAccessKey] = useState('')\r\n    \r\n    return(\r\n        <UserContext.Provider value = {{ USER :  [user, setUser],LOGIN_STATE : [loginState,setLoginState], ACCESS_KEY: [accessKey,setAccessKey]}}>\r\n               {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../../contexts/UserContext'\r\n\r\nconst Header = () => {\r\n    const {USER, LOGIN_STATE} = useContext(UserContext)\r\n    const {setUser} = USER\r\n    const [loginState,setLoginState] = LOGIN_STATE\r\n   \r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/api/Users/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href = \"/\"\r\n            setUser({ name: '' })\r\n            setLoginState(false)\r\n        } catch (err) {\r\n            window.location.href = \"/\"\r\n        }\r\n    }\r\n    return (\r\n        <header>\r\n            <div className=\"logo\">\r\n               <h1 ><Link to=\"/\"><img style = {{width: \"15%\"}} src = \"https://lh3.googleusercontent.com/whWdCHvpK52qWkxadxxRiATHijar8KkJZCHtmwa3KeLyzf1hT3jqIGKE5FTJvvrmWWxneg1CGQ7VuQ624HKy=s72-rwa\" alt = \"SVG\"/> Filter <span className = \"HalfLogo\"> Forces</span></Link></h1>\r\n            </div>\r\n            <ul className=\"options\">\r\n\r\n                {\r\n                    !loginState && \r\n                    <>\r\n                     <li><Link to=\"/train\"><i className=\"fas fa-user-ninja\"></i> Train</Link></li>\r\n                    <li><Link to=\"/Visualize\"><i className=\"fas fa-chart-line\"></i> Visualize </Link></li>\r\n                       \r\n                    <li><Link to=\"/login\"><i className=\"far fa-user\"></i> Sign in</Link></li>\r\n                        \r\n                        </>\r\n                }\r\n                {\r\n                    loginState &&\r\n                    <>\r\n                       \r\n                        <li><Link to=\"/train\"><i className=\"fas fa-user-ninja\"></i> Train</Link></li>\r\n                      \r\n                        <li><Link to=\"/Visualize\"><i className=\"fas fa-chart-line\"></i> Visualize </Link></li>\r\n                         \r\n                         \r\n                         \r\n                          <li  className = \"gate\"><Link to=\"/logout\" onClick={handleLogout}><i className=\"fas fa-user\"></i>Logout</Link></li>\r\n\r\n\r\n\r\n                    </>\r\n                }\r\n\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport './notification.css'\r\nexport const showErrMsg = (msg) => {\r\n    return <div className = \"errMsg\">{msg}</div>\r\n}\r\nexport const showSuccessMsg = (msg) => {\r\n    return <div className = \"successMsg\">{msg}</div>\r\n}","import React, {useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { showErrMsg,showSuccessMsg } from '../../../utils/notification/Notification'\r\nimport { UserContext } from '../../../contexts/UserContext'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Login = () => {\r\n   \r\n    const {USER, LOGIN_STATE} = useContext(UserContext)\r\n    const [user,setUser] = USER\r\n   \r\n    const {setLoginState} = LOGIN_STATE\r\n\r\n    const { email, password, err, success } = user\r\n    \r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n\r\n        setUser({...user, [name]: value, err: '', success: ''})\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            const res = await axios.post('/api/Users/login', {\r\n                email, password\r\n            })\r\n        \r\n           \r\n                localStorage.setItem('firstLogin', true)\r\n                setUser({...user, err: '', success: res.data.msg})\r\n                window.location.href = \"/\"\r\n            //    try{\r\n            //     const use = await axios.post('/api/Users/refresh_token')\r\n\r\n           \r\n            //     const userResponse = await axios.get('/api/Users/userInfo', {\r\n            //         headers: {\"Authorization\": use.data.access_token}\r\n            //     })\r\n               \r\n                \r\n            //    }catch(Err)\r\n            //    {\r\n            //        console.log(Err)\r\n            //    }\r\n            \r\n              \r\n              \r\n              \r\n                setLoginState(true)\r\n              \r\n                \r\n               \r\n               \r\n         \r\n         \r\n        }catch(err){\r\n           if(err.response)\r\n           {\r\n            setUser({...user,  err: err.response.data.msg, success: ''})\r\n           }\r\n            \r\n        }\r\n    } \r\n    \r\n      \r\n        return (\r\n            <div className=\"login_page\">\r\n                <h2>Login</h2>\r\n                {err && showErrMsg(err)}\r\n                {success && showSuccessMsg(success)}\r\n                <form onSubmit = {handleSubmit}>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter email address\"\r\n                            id=\"email\"\r\n                           value={email}\r\n                            name=\"email\"\r\n                            onChange = {handleChangeInput} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            id=\"password\"\r\n                           value={password}\r\n                            name=\"password\"\r\n                            onChange = {handleChangeInput} />\r\n                    </div>\r\n                    <div className = \"row\">\r\n                        <button type = \"submit\">Login</button>\r\n                        <Link to = \"/forgotPassword\">Forgot passowrd</Link>\r\n                    </div>\r\n                </form>\r\n                <p>New to here? <Link to = \"/register\">Register</Link> </p>\r\n            </div>\r\n        )\r\n      \r\n    \r\n    \r\n}\r\nexport default Login","export const isEmpty = value => {\r\n    if(!value)return true\r\n    return false\r\n}\r\nexport const isEmail = email => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nexport const isLength = password => {\r\n    if(password.length >= 6)return true\r\n    return false\r\n}\r\nexport const isMatch = (password, cf_password) => {\r\n    if(password === cf_password)return true\r\n    return false\r\n}","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { showErrMsg,showSuccessMsg } from '../../../utils/notification/Notification'\r\nimport { isEmpty, isEmail, isLength, isMatch } from '../../../utils/validation/Validation'\r\nimport axios from 'axios'\r\nconst initialState = {\r\n    username:'',\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\nconst Register = () => {\r\n    const [user, setUser] = useState(initialState)\r\n\r\n    const { username,name, email, password,cf_password, err, success } = user\r\n    \r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n\r\n        setUser({...user, [name]: value, err: '', success: ''})\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if(isEmpty(name) || isEmpty(password) || isEmail(username))\r\n        {\r\n            \r\n            return setUser({...user, err: \"Please fill in all fields\", success: ''})\r\n        }\r\n        if(!isEmail(email))\r\n        {\r\n            return setUser({...user, err: \"Invalid email. \", success: ''})\r\n        }\r\n        if(!isLength(password))\r\n        {\r\n            return setUser({...user, err: \"Password must be atleast 6 characters. \", success: ''})\r\n        }\r\n        if(!isMatch(password, cf_password))\r\n        {\r\n            return setUser({...user, err: \"Password did not match\", success: ''})\r\n        }\r\n        try{\r\n           \r\n           \r\n            const res = await axios.post('/api/Users/register', {\r\n                username, name,email, password\r\n             })\r\n           \r\n        \r\n            setUser({...user, err: '', success: res.data.msg})\r\n           \r\n        }catch(err){\r\n            err.response.data.msg &&\r\n            setUser({...user,  err: err.response.data.msg, success: ''})\r\n        }\r\n    } \r\n    return (\r\n        <div className=\"login_page\">\r\n            <h2>Register</h2>\r\n            {err && showErrMsg(err)}\r\n            {success && showSuccessMsg(success)}\r\n            <form onSubmit = {handleSubmit}>\r\n            <div>\r\n                    <label htmlFor=\"username\">Enter your Codeforces handle</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your handle\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        name=\"username\"\r\n                        onChange = {handleChangeInput} />\r\n                </div>\r\n            <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        name=\"name\"\r\n                        onChange = {handleChangeInput} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter email address\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        onChange = {handleChangeInput} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        name=\"password\"\r\n                        onChange = {handleChangeInput} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"cf_assword\">Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm your password\"\r\n                        id=\"cf_password\"\r\n                        value={cf_password}\r\n                        name=\"cf_password\"\r\n                        onChange = {handleChangeInput} />\r\n                </div>\r\n                <div className = \"row\">\r\n                    <button type = \"submit\">Register</button>\r\n                  \r\n                </div>\r\n            </form>\r\n            <p>Already have an account? <Link to = \"/login\">Login</Link> </p>\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React, { useEffect, useState } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { showErrMsg, showSuccessMsg } from '../../../utils/notification/Notification'\r\nconst ActivationEmail = () => {\r\n    const {activation_token} = useParams()\r\n    const [err, setErr] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n  \r\nuseEffect(() => {\r\n        \r\n        if(activation_token){\r\n               const activationEmail = async () => {\r\n                   try{\r\n                       const res = await axios.post('/api/Users/activateEmail', {activation_token})\r\n                       setSuccess(res.data.msg)\r\n                   }\r\n                   catch(err)\r\n                   {\r\n                       err.response.data.msg && setErr(err.response.data.msg)\r\n                   }\r\n               }\r\n               activationEmail()\r\n        }    \r\n   }, [activation_token])\r\n    return(\r\n        <div className=\"active_page\">\r\n           {err && showErrMsg(err)}\r\n           {\r\n               success && showSuccessMsg(success)\r\n           }\r\n        </div>\r\n    )\r\n}\r\nexport default ActivationEmail","import React, { useEffect, useRef, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Display from './DisplayList'\r\n\r\nconst Train = () => {\r\n\r\n\r\n    const [handle, setHandle] = useState('')\r\n\r\n    const [listHandle, setListHandle] = useState([])\r\n\r\n    //@updatedSet => Stores the filtered problem list\r\n    const [updatedSet, setUpdate] = useState([])\r\n    const triggerRender = useRef(false)\r\n\r\n\r\n    //Input field for filters (ex: startRagne = 1300; endRange = 1500; ladderInputField = A)\r\n    const [startRange, setStartRange] = useState('')\r\n    const [endRange, setEndRange] = useState('')\r\n    const [ladderInputField, setLadderField] = useState('')\r\n\r\n    /*\r\n    @allHandlePsetInfo => {\r\n        \"handle1\": [...pset solved by the user handle1],\r\n        \"handle2\": [...pset solved by the user handle2]\r\n                 :\r\n                 :  \r\n    }\r\n    */\r\n    const [allHandlePsetInfo, setPsetInfo] = useState({})\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n      @personalHandle => user's handle\r\n      @personalPsetOnCf => user's pset history\r\n    */\r\n    const [personalHandle, setPersonalHandle] = useState('')\r\n    const [personalPsetOnCf, setPersonalPsetOnCf] = useState([])\r\n\r\n\r\n\r\n\r\n    /*\r\n        variable allTags =>Stores All topics that are present in Codeforces\r\n                 allLadder => Stores ladders (Ex: A, B, C, D1, D2 ...)\r\n                 allPset => Stores all problems on Codeforces platform\r\n\r\n     */\r\n\r\n    const [allPset, setAllPset] = useState([])\r\n    const [allTags, setAllTags] = useState([])\r\n    const [allLadder, setAllLadder] = useState([])\r\n    \r\n\r\n    const [permission, setPermission] = useState(0)\r\n    const [showTag, setShowTag] = useState(\"Hide the tag\")\r\n    const [contentPset, setContentPset] = useState(\"column\")\r\n    //Notification\r\n    const [notification, setNotification] = useState([])\r\n\r\n    /*\r\n         @currentLadder => Array of user filtered Ladder (Ex: [\"A\", \"B\"])\r\n\r\n         @currentTopics => Array of user filtered Topics (Ex: [\"DP\", \"DSU\", \"Graphs\"])\r\n\r\n         @currentRange => Array of size 2;  currentRange[0] => Starting range \r\n                                            currentRange[1] => Ending range\r\n                                    Ex: currentRange = [1300, 1500]\r\n                                    Indication to display all the questions in the range [1300, 1500]\r\n    */\r\n    const [currentLadder, setCurrentLadder] = useState([])\r\n    const [currentTopics, setCurrentTopics] = useState([])\r\n    const [currentRange, setCurrentRange] = useState([])\r\n\r\n\r\n\r\n    /*\r\n      @display => Holds the styling params\r\n      @topicOverlay => Holds the styling params\r\n    */\r\n    const [display, setDisplay] = useState(\"flex\")\r\n    const [topicOverlay, setTopciOverlay] = useState(\"none\")\r\n\r\n\r\n    //Universal pset which are filtered according to Personal Handle tags \r\n    const [filterTagPset, setFilterTagPset] = useState([])\r\n\r\n\r\n    //Fetching all problems from Codeforces API and distributing data to different array when page loads\r\n    useEffect(() => {\r\n\r\n        const find = async () => {\r\n\r\n            const response = await axios.get(`https://codeforces.com/api/problemset.problems`)\r\n            \r\n            const AllTags = []\r\n            const AllLadder = []\r\n\r\n\r\n            let sets = response.data.result.problems\r\n            for (let i = 0; i < sets.length; i++) {\r\n                for (let j = 0; j < sets[i].tags.length; j++) {\r\n                    if (!AllTags.includes(sets[i].tags[j])) {\r\n                        AllTags.push(sets[i].tags[j])\r\n                    }\r\n\r\n                }\r\n                if (!AllLadder.includes(sets[i].index)) {\r\n                    AllLadder.push(sets[i].index)\r\n                }\r\n            }\r\n           \r\n            \r\n            setAllLadder([...AllLadder])\r\n            setAllTags([...AllTags])\r\n \r\n            setAllPset([...response.data.result.problemStatistics])\r\n        }\r\n        find()\r\n    }, [])\r\n// useEffect(() => {\r\n//     let personalStuff = personalPsetOnCf.map((info) => info.problem)\r\n//     console.log(personalStuff)\r\n//    let StopDuplicates = [...new Map(personalStuff.map(obj => [JSON.stringify(obj), obj])).values()];\r\n//    setUpdate([...StopDuplicates])\r\n// }, [personalPsetOnCf.length])\r\n\r\n    //Below UseEffect is also controlled by triggerRender variable\r\n    //triggerRender ? UseEffect Runs : UseEffect depends on other factors\r\n    useEffect(() => {\r\n        //Algorithm to Shortlist the Problems according to the user's filter\r\n\r\n        let priorityPset = new Map()\r\n\r\n\r\n        if (triggerRender.current === true) {\r\n\r\n            //Set every pset priority as 0\r\n            for (let info of filterTagPset) {\r\n                priorityPset.set(info, 0)\r\n            }\r\n\r\n            if (currentRange.length === 0) {\r\n                for (let info of filterTagPset) {\r\n\r\n\r\n                    if (currentLadder.includes(info.index)) {\r\n                        priorityPset.set(info, priorityPset.get(info) + 1)\r\n\r\n                    }\r\n\r\n                    /*If Any topics under user Filtered Topic matches with current Pset, increment the priyority\r\n                           Ex: currentTopics: [\"DP\", \"DSU\", \"Graphs\"]\r\n                               Current Pset Topics => [\"Bit Masks\", \"DSU\", \"Probability\"]\r\n                               \"DSU\" is common in both => Increment priyority\r\n                        */\r\n                    if (currentTopics.length) {\r\n                        let flag = 0\r\n\r\n                        for (let tag of info.tags) {\r\n                            if (currentTopics.includes(tag)) {\r\n                                flag = 1\r\n                            }\r\n                        }\r\n                        if (flag) {\r\n                            priorityPset.set(info, priorityPset.get(info) + 1)\r\n                            flag = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            else {\r\n\r\n\r\n                for (let info of filterTagPset) {\r\n\r\n                    if (info.rating >= currentRange[0] && info.rating <= currentRange[1]) {\r\n\r\n                        //If Pset lies under rating range, increment the priyority\r\n                        priorityPset.set(info, priorityPset.get(info) + 1)\r\n\r\n                        //If Pset lies under user Filtered Ladder, increment the priyority\r\n                        if (currentLadder.includes(info.index)) {\r\n                            priorityPset.set(info, priorityPset.get(info) + 1)\r\n\r\n                        }\r\n\r\n                        /*If Any topics under user Filtered Topic matches with current Pset, increment the priyority\r\n                           Ex: currentTopics: [\"DP\", \"DSU\", \"Graphs\"]\r\n                               Current Pset Topics => [\"Bit Masks\", \"DSU\", \"Probability\"]\r\n                               \"DSU\" is common in both => Increment priority\r\n                        */\r\n                        if (currentTopics.length) {\r\n                            let flag = 0\r\n                            for (let tag of info.tags) {\r\n                                if (currentTopics.includes(tag)) {\r\n                                    flag = 1\r\n                                }\r\n                            }\r\n                            if (flag) {\r\n                                priorityPset.set(info, priorityPset.get(info) + 1)\r\n                                flag = 0\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            let Priority = []\r\n            for (let info of priorityPset.values()) {\r\n                Priority.push(info)\r\n            }\r\n\r\n\r\n            let listToDisplay = []\r\n            let maxVotes = Math.max(...Priority)\r\n\r\n\r\n            if (currentLadder.length || currentTopics.length) {\r\n                for (let info of priorityPset) {\r\n\r\n                    if (maxVotes > 0 && priorityPset.get(info[0]) === maxVotes) {\r\n\r\n                        listToDisplay.push(info[0])\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let info of priorityPset) {\r\n\r\n                    if (priorityPset.get(info[0]) === maxVotes) {\r\n\r\n                        listToDisplay.push(info[0])\r\n                    }\r\n                }\r\n            }\r\n\r\n            triggerRender.current = false\r\n         \r\n          \r\n           \r\n          \r\n          let StopDuplicates = [...new Map(listToDisplay.map(obj => [JSON.stringify(obj), obj])).values()];\r\n            if(StopDuplicates.length > 0)\r\n            {\r\n                setContentPset(\"row-reverse\")\r\n            }\r\n            setUpdate([...StopDuplicates])\r\n\r\n        }\r\n\r\n    }, [filterTagPset, currentLadder, currentRange, currentTopics])\r\n\r\n\r\n\r\n    /*\r\n      Controlled input change\r\n    */\r\n    const handleEndRange = (event) => {\r\n        setEndRange(event.target.value)\r\n    }\r\n    const handleStartRange = (event) => {\r\n        setStartRange(event.target.value)\r\n    }\r\n    const ChangeInputHandle = (event) => {\r\n\r\n        setHandle(event.target.value)\r\n    }\r\n    const handleLadderChange = (event) => {\r\n\r\n        setLadderField(event.target.value)\r\n    }\r\n    const handlePersonalHandle = (event) => {\r\n        setPersonalHandle(event.target.value)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n       Filter Controls\r\n    */\r\n    const handleAddLadder = (event) => {\r\n        event.preventDefault()\r\n        const prevLadder = [...currentLadder]\r\n\r\n        triggerRender.current = true\r\n        if (allLadder.includes(ladderInputField)) {\r\n\r\n            if (!prevLadder.includes(ladderInputField)) {\r\n                prevLadder.push(ladderInputField)\r\n\r\n\r\n                setTimeout(() => {\r\n                    setNotification([])\r\n                }, 2500)\r\n                setNotification([` ${ladderInputField} is added successfully`, \"green\"])\r\n                setCurrentLadder([...prevLadder])\r\n                setLadderField('')\r\n            }\r\n            else {\r\n\r\n                setTimeout(() => {\r\n                    setNotification([])\r\n                }, 2500)\r\n                setNotification([`Already added`, \"red\"])\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`Please enter the valid tag`, \"red\"])\r\n        }\r\n    }\r\n    const handleAddTopic = (topic) => {\r\n        const prevTopics = [...currentTopics]\r\n        triggerRender.current = true\r\n\r\n        if (prevTopics.includes(topic) === false) {\r\n            prevTopics.push(topic)\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`Topic ${topic} is added successfully`, \"green\"])\r\n            setCurrentTopics([...prevTopics])\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`Already added this topic`, \"red\"])\r\n        }\r\n\r\n\r\n    }\r\n    const handleRemoveLadder = (data) => {\r\n\r\n        triggerRender.current = true\r\n        let listLadder = currentLadder.filter((info) => info !== data.info)\r\n        setTimeout(() => {\r\n            setNotification([])\r\n        }, 2500)\r\n        setNotification([`Ladder ${data.info} is removed successfully`, \"green\"])\r\n        setCurrentLadder([...listLadder])\r\n    }\r\n    const handleRemoveTopic = (data => {\r\n        triggerRender.current = true\r\n        let listTopics = currentTopics.filter((info) => info !== data.info)\r\n        setTimeout(() => {\r\n            setNotification([])\r\n        }, 2500)\r\n        setNotification([`Ladder ${data.info} is removed successfully`, \"green\"])\r\n\r\n        setCurrentTopics([...listTopics])\r\n    })\r\n    const handleRangeSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(startRange, endRange)\r\n        if (startRange.length === 0 || endRange.length === 0 || Number(startRange) > Number(endRange)) {\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`Invalid range.. Try something like 1200 - 1500`, \"red\"])\r\n        }\r\n        else {\r\n            triggerRender.current = true\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`Filter ${startRange} - ${endRange} is added`, \"green\"])\r\n            setCurrentRange([startRange, endRange])\r\n        }\r\n\r\n    }\r\n    const clearRange = (event) => {\r\n        event.preventDefault()\r\n        if (startRange.length === 0 || endRange.length === 0) {\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`Invalid range`, \"red\"])\r\n        }\r\n        else {\r\n            triggerRender.current = true\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`Filter ${startRange} - ${endRange} is removed`, \"green\"])\r\n            setStartRange('')\r\n            setEndRange('')\r\n            setCurrentRange([])\r\n        }\r\n\r\n    }\r\n    const handleAdminUsername = async (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n\r\n            const response = await axios.get(`https://codeforces.com/api/user.status?handle=${personalHandle}`)\r\n           \r\n          \r\n            setPermission(1)\r\n            setPersonalPsetOnCf([...response.data.result])\r\n\r\n        }\r\n        catch (err) {\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([`This handle does not exist`, \"red\"])\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    const handleAddPerson = async (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n        try {\r\n            triggerRender.current = true\r\n            var handles = [...listHandle]\r\n            if (handles.includes(handle) === false) {\r\n                handles.push(handle)\r\n                var alreadyExistingProblemSet = []\r\n                const response = await axios.get(`https://codeforces.com/api/user.status?handle=${handle}`)\r\n\r\n                const ProblemSetInfo = response.data.result.filter((info) => {\r\n                    return info.verdict === \"OK\"\r\n                })\r\n\r\n\r\n                var list = []\r\n                for (let i = 0; i < ProblemSetInfo.length; i++) {\r\n                    alreadyExistingProblemSet.push(ProblemSetInfo[i].problem)\r\n                    list.push(ProblemSetInfo[i].problem)\r\n                }\r\n\r\n                var newGuy = {\r\n                    ...allHandlePsetInfo\r\n                }\r\n\r\n                newGuy[handle] = [...alreadyExistingProblemSet]\r\n\r\n\r\n\r\n                // console.log(allHandlePsetInfo)\r\n                for (let i = 0; i < listHandle.length; i++) {\r\n\r\n                    let individualPset = [...allHandlePsetInfo[listHandle[i]]]\r\n                    for (let j = 0; j < individualPset.length; j++) {\r\n                        list.push(individualPset[j])\r\n\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    setNotification([])\r\n                }, 2500)\r\n                setNotification([` ${handle} is added successfully`, \"green\"])\r\n                setPsetInfo(newGuy)\r\n                setListHandle(handles)\r\n                setFilterTagPset([...list])\r\n                setHandle('')\r\n\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    setNotification([])\r\n                }, 2500)\r\n                setNotification([` Handle is already added`, \"red\"])\r\n            }\r\n\r\n        }\r\n        catch (error) {\r\n\r\n            setTimeout(() => {\r\n                setNotification([])\r\n            }, 2500)\r\n            setNotification([\"Please enter the valid handle or wait for the codeforces api to accept the request\", \"red\"])\r\n        }\r\n\r\n    }\r\n\r\n    const handleRemovePerson = (info) => {\r\n\r\n        const data = [...listHandle]\r\n        const filter = data.filter((name) => name !== info)\r\n        const updatedObject = allHandlePsetInfo\r\n        triggerRender.current = true\r\n        delete updatedObject[info]\r\n\r\n        let psetHolder = []\r\n        for (let i = 0; i < listHandle.length; i++) {\r\n            if (listHandle[i] !== info) {\r\n                let individualPset = [...allHandlePsetInfo[listHandle[i]]]\r\n\r\n                for (let x of individualPset) {\r\n                    psetHolder.push(x)\r\n                }\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            setNotification([])\r\n        }, 2500)\r\n        setNotification([`${info} is removed successfully`, \"green\"])\r\n        setFilterTagPset(psetHolder)\r\n\r\n        setPsetInfo(updatedObject)\r\n\r\n        setListHandle(filter)\r\n    }\r\n\r\n    const handleShowTag = (event) => {\r\n        if (showTag === \"Hide the tag\") {\r\n            setShowTag(\"Show the tag\")\r\n        }\r\n        else {\r\n            setShowTag(\"Hide the tag\")\r\n        }\r\n    }\r\n\r\n\r\n    //List to display (Pset)\r\n    const handleList = (general) => (\r\n\r\n\r\n\r\n        general ? <Display info={general} personalInfo={personalPsetOnCf} stats={allPset} tags={allTags} ladders={allLadder} showTag={showTag} />\r\n            : null\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n     Style Controls\r\n    */\r\n    const handleTopicSubmit = (event) => {\r\n        event.preventDefault()\r\n        setDisplay(\"none\")\r\n        setTopciOverlay(\"flex\")\r\n\r\n    }\r\n\r\n    const contentStyle = {\r\n        display: `${display}`\r\n    }\r\n    const OverlayStyle = {\r\n        display: `${topicOverlay}`\r\n    }\r\n    const manageOverlayTopic = () => {\r\n\r\n        setDisplay('flex')\r\n        setTopciOverlay(\"none\")\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n              {notification.length === 2 &&\r\n                                    <div className=\"Notification\" style={{ backgroundColor: notification[1] }}>\r\n                                        <h3> {notification[0]}</h3>\r\n                                    </div>\r\n                                }\r\n            {\r\n                \r\n                permission >= 1 ?\r\n\r\n                    <div className=\"mainField\">\r\n\r\n                        {\r\n                            (currentLadder.length > 0 || currentTopics.length > 0 || listHandle.length > 0) &&\r\n                            <div className=\"lablesFiled\">\r\n                                <h4>Applied Filters</h4>\r\n                                {\r\n\r\n\r\n                                    currentLadder.map((info, index) => {\r\n                                        return (\r\n\r\n                                            <div key={index} className=\"ui image label filterTag LABLE\">\r\n                                                <span>{info}</span>\r\n\r\n                                                <i className=\"delete icon\" onClick={() => handleRemoveLadder({ info })} />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n\r\n\r\n\r\n\r\n                                }\r\n                                {\r\n\r\n                                    currentTopics.map((info, index) => {\r\n                                        return (\r\n                                            <div key={index} className=\"ui image label filterTag TOPIC\">\r\n                                                <span>{info}</span>\r\n\r\n                                                <i className=\"delete icon\" onClick={() => handleRemoveTopic({ info })} />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n\r\n                                }\r\n\r\n                                {\r\n\r\n                                    listHandle.map((info, index) => {\r\n                                        return (\r\n                                            <div className=\"ui image label filterTag tagFilterName\" key={index}>\r\n                                                <span>{info}</span><i className=\"collapse delete icon\" onClick={() => handleRemovePerson(info)} />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"content-problemset\" style = {{flexDirection : contentPset}}>\r\n\r\n                            <div className=\"controls\" style={contentStyle}>\r\n                                {notification.length === 2 &&\r\n                                    <div className=\"Notification\" style={{ backgroundColor: notification[1] }}>\r\n                                        <h3> {notification[0]}</h3>\r\n                                    </div>\r\n                                }\r\n                                <h2 >Filters</h2>\r\n                                <div className=\"LEFT\">\r\n                                    <form className=\"RangeInputForm\">\r\n                                        <h3>Enter the difficutly range</h3>\r\n                                        <div className=\"RangeInput\">\r\n                                            <input value={startRange} onChange={(event) => handleStartRange(event)} placeholder=\"From\" />\r\n\r\n                                            <input value={endRange} onChange={event => handleEndRange(event)} placeholder=\"To\" />\r\n                                        </div>\r\n                                       <div style = {{display :\"flex\", flexDirection: \"row\", justifyContent:\"center\",flexWrap: \"wrap\"}}>\r\n\r\n                                        <button className=\"ui secondary button\" onClick={(e) => handleRangeSubmit(e)}>\r\n                                            Submit\r\n                                        </button>\r\n                                        <button className=\"ui button\" onClick={(e) => clearRange(e)}>\r\n                                            Cancel\r\n                                        </button>\r\n                                        </div>\r\n\r\n\r\n                                    </form>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <div className=\"RIGHT\">\r\n                                    <div style = {{display :\"flex\", flexDirection: \"row\", justifyContent:\"center\",flexWrap: \"wrap\"}}>\r\n                                    <button className=\"ui select button\"  onClick={(event) => handleTopicSubmit(event)} style = {{margin: \"0.3em\"}}>\r\n                                        Select the topic\r\n                                    </button>\r\n                                    \r\n                                        <button  style = {{margin: \"0.3em\"}} className=\"ui select button\" onClick={(e) => handleShowTag(e)}>{showTag}</button>\r\n                                    </div>\r\n                                    <div>\r\n                                    <form className=\"HandleInputForm\">\r\n                                        <h3>Enter the handle</h3>\r\n                                        <input value={handle} type=\"text\" onChange={ChangeInputHandle} />\r\n                                        <br />\r\n                                        <button className=\"ui secondary button\"  onClick={handleAddPerson}>\r\n                                            Add Handle\r\n                                        </button>\r\n\r\n\r\n                                    </form>\r\n                                   \r\n                                        \r\n                                   \r\n                                    <div className=\"ladderControls\">\r\n                                    \r\n                                        <h3>\r\n                                            Ladders\r\n                                        </h3>\r\n                                        <input type=\"text\" value={ladderInputField} onChange={(event) => handleLadderChange(event)} placeholder=\"Ex: A, B\" />\r\n\r\n                                        <button className=\"ui secondary button\" onClick={(event) => handleAddLadder(event)}>\r\n                                            Add ladder\r\n                                        </button>\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <div className=\"overlayForTopics\" style={OverlayStyle}>\r\n                                <button onClick={() => manageOverlayTopic()}>\r\n                                    ❌\r\n                                </button>\r\n                                {\r\n                                    allTags.map((i, index) => <p key={index} onClick={() => handleAddTopic(i)}>{i}</p>)\r\n                                }\r\n                            </div>\r\n                            <div className=\"content\" style={contentStyle}>\r\n\r\n                                {\r\n                                       updatedSet.length > 0 ? \r\n                                        handleList(updatedSet)\r\n                                        :\r\n                                        <h3 style={{ marginLeft: \"auto\", marginRight: \"auto\", color: \"snow\" }}>Please Add the handles to begin</h3>\r\n                                      \r\n                                   \r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n                    < >\r\n\r\n\r\n\r\n\r\n\r\n                        <h1 style={{ textAlign: 'center', marginTop: '10%' }}>Enter your Codeforces Handle</h1>\r\n                        <form onSubmit={(event) => handleAdminUsername(event)} className = \"INPUT\">\r\n\r\n                            <div className=\"ui action input \">\r\n\r\n\r\n\r\n                                <input\r\n\r\n                                    type=\"text\"\r\n                                    value={personalHandle}\r\n                                    placeholder=\"Errichto\"\r\n                                    onChange={(event) => handlePersonalHandle(event)} />\r\n                                <button className=\"ui icon button\" onClick={(event) => handleAdminUsername(event)} type=\"submit\">\r\n                                    <i className=\"arrow right icon\" />\r\n                                </button>\r\n\r\n                            </div>\r\n                        </form>\r\n\r\n                    </>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Train","import React, {  useState } from 'react'\r\nimport CalendarHeatmap from 'react-calendar-heatmap'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport Select from 'react-select'\r\n// date ? \r\n// <Overlay date={date} DateWise={DateWise} setDate={setDate} />\r\n// :\r\n\r\n\r\nconst HeatMap = ({ optionWise, DateWise, setDate}) => {\r\n    \r\n    const [year, setYear] = useState(optionWise[0].value)\r\n \r\n    const randomValues = []\r\n\r\n    for (let info of DateWise) {\r\n        randomValues.push({\r\n            date: info[0],\r\n            count: info[1].length\r\n        })\r\n    }\r\n\r\n    randomValues.reverse()\r\n    const handleOverlay = (value) => {\r\n    \r\n        if(value)\r\n        {\r\n            setDate(value.date)\r\n        }\r\n        \r\n\r\n\r\n    }\r\n    return (\r\n\r\n\r\n\r\n        <div>\r\n            <div className=\"MainContainer\">\r\n\r\n                    <div className=\"HEATMAP-Container\">\r\n\r\n                        <div className=\"HeadingContainer\">\r\n\r\n                            <h2>Heat map</h2>\r\n                            <Select\r\n                                className=\"dropdown\"\r\n                                options={optionWise}\r\n                                defaultValue={{ value: optionWise[0].value, label: optionWise[0].label }}\r\n                                onChange={(option) => setYear(Number(option.value))}\r\n                            />\r\n\r\n                        </div>\r\n                        <CalendarHeatmap\r\n                            startDate={new Date(year, 0, 0)}\r\n                            endDate={new Date(year, 11, 31)}\r\n                            values={randomValues}\r\n                            gutterSize={2}\r\n                            classForValue={value => {\r\n                                if (!value) {\r\n                                    return 'color-empty';\r\n                                }\r\n                                return `color-github-${value.count}`;\r\n                            }}\r\n                            tooltipDataAttrs={value => {\r\n                                if (value.count > 0) {\r\n                                    let da = value.date\r\n                                    da = da.split('-')\r\n                                    da.reverse()\r\n                                     \r\n                                    return {\r\n                                        'data-tip': `On ${da[0]}/${da[1]}/${da[2]}, submission count: ${value.count\r\n                                            }`,\r\n                                    }\r\n                                }\r\n\r\n                            }}\r\n                            showWeekdayLabels={true}\r\n                            onClick={value => handleOverlay(value)}\r\n                        />\r\n                        <ReactTooltip />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            \r\n        </div>\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default HeatMap","import React from 'react'\r\nimport { Bar} from 'react-chartjs-2';\r\nfunction rainbow(numOfSteps, step) {\r\n    // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distinguishable vibrant markers in Google Maps and other apps.\r\n    // Adam Cole, 2011-Sept-14\r\n    // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n    var r, g, b;\r\n    var h = step / numOfSteps;\r\n    var i = ~~(h * 6);\r\n    var f = h * 6 - i;\r\n    var q = 1 - f;\r\n    switch(i % 6){\r\n        case 0: r = 1; g = f; b = 0; break;\r\n        case 1: r = q; g = 1; b = 0; break;\r\n        case 2: r = 0; g = 1; b = f; break;\r\n        case 3: r = 0; g = q; b = 1; break;\r\n        case 4: r = f; g = 0; b = 1; break;\r\n        case 5: r = 1; g = 0; b = q; break;\r\n        default: alert(\"Rainbow\");\r\n    }\r\n    var c = \"#\" + (\"00\" + (~ ~(r * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(g * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(b * 255)).toString(16)).slice(-2);\r\n    return (c);\r\n}\r\n\r\nconst Histogram = (props) => {\r\n    let AvgTime = []\r\n    let COLOR_First= []\r\n    let COLOR_Second = []\r\n    for (let value of props.RatingInfo) {\r\n        let time = Math.ceil(props.RatingWiseAvg.get(value)[0] / props.RatingWiseAvg.get(value)[1])\r\n        let minutes = Math.ceil(time / 60)\r\n        //  let seconds = time - minutes * 60\r\n        AvgTime.push(minutes)\r\n        COLOR_First.push(rainbow(props.RatingInfo.length, AvgTime.length))\r\n    }\r\n    let AvgTimeType = []\r\n    let TYPES = [...props.TypeInfo]\r\n    TYPES.sort()\r\n   \r\n    for(let value of TYPES){\r\n        let time = Math.ceil(props.TypeWiseAvg.get(value)[0] /  props.TypeWiseAvg.get(value)[1])\r\n        let minutes  = Math.ceil(time/ 60)\r\n        AvgTimeType.push(minutes)\r\n        COLOR_Second.push(rainbow(TYPES.length, AvgTimeType.length))\r\n    }\r\n\r\n    var data = [{\r\n        labels: [...props.RatingInfo],\r\n        datasets: [\r\n            {\r\n\r\n                data: [...AvgTime],\r\n                backgroundColor: [...COLOR_First],\r\n                borderWidth: 2,\r\n                borderColor: 'black'\r\n\r\n            }\r\n        ]\r\n    }, \r\n{\r\n    labels: [...TYPES],\r\n    datasets: [\r\n        {\r\n\r\n            data: [...AvgTimeType],\r\n            backgroundColor : [...COLOR_Second],\r\n            borderWidth: 2,\r\n                borderColor: 'black'\r\n\r\n        }\r\n    ]\r\n}]\r\n    return (\r\n        \r\n        <div className=\"Histogram\">\r\n           <div className = \"HistoContainer\">\r\n           <Bar\r\n                data={data[0]}\r\n\r\n                options={{\r\n                   \r\n                   maintainAspectRation: true,\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            display: false\r\n                        },\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Rating vs Time (in minutes)',\r\n                            fontSize: 50\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n           </div>\r\n           <div className = \"HistoContainer\">\r\n           <Bar\r\n                data={data[1]}\r\n\r\n                options={{\r\n                   \r\n                    maintainAspectRation: true,\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            display: false,\r\n                       \r\n                        },\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Type vs Time (in minutes)',\r\n                            fontSize: 50\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n           </div>\r\n             \r\n\r\n\r\n            </div>\r\n\r\n         \r\n    )\r\n\r\n}\r\nexport default Histogram","import React from 'react'\r\nimport { Doughnut} from 'react-chartjs-2';\r\nfunction rainbow(numOfSteps, step) {\r\n    // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distinguishable vibrant markers in Google Maps and other apps.\r\n    // Adam Cole, 2011-Sept-14\r\n    // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n    var r, g, b;\r\n    var h = step / numOfSteps;\r\n    var i = ~~(h * 6);\r\n    var f = h * 6 - i;\r\n    var q = 1 - f;\r\n    switch(i % 6){\r\n        case 0: r = 1; g = f; b = 0; break;\r\n        case 1: r = q; g = 1; b = 0; break;\r\n        case 2: r = 0; g = 1; b = f; break;\r\n        case 3: r = 0; g = q; b = 1; break;\r\n        case 4: r = f; g = 0; b = 1; break;\r\n        case 5: r = 1; g = 0; b = q; break;\r\n        default: alert(\"Rainbow\");\r\n    }\r\n    var c = \"#\" + (\"00\" + (~ ~(r * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(g * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(b * 255)).toString(16)).slice(-2);\r\n    return (c);\r\n}\r\nconst Doughnuts = (props) => {\r\n\r\n    let AvgTimeTopic = []\r\n   let COLOR = []\r\n    for(let value of props.TopicInfo){\r\n        let time = Math.ceil(props.TopicWiseAvg.get(value)[0] /  props.TopicWiseAvg.get(value)[1])\r\n        let minutes  = Math.ceil(time/ 60)\r\n        AvgTimeTopic.push(minutes)\r\n        COLOR.push(rainbow(props.TopicInfo.length, AvgTimeTopic.length))\r\n    }\r\n    var data = {\r\n        labels: [...props.TopicInfo],\r\n        datasets: [\r\n            {\r\n\r\n                data: [...AvgTimeTopic],\r\n                backgroundColor: [...COLOR]\r\n\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"Doughnut\">\r\n           \r\n         \r\n            \r\n             <div className = \"DoughnutContainer\">\r\n             <Doughnut\r\n                data={data}\r\n\r\n                options={{\r\n                   \r\n                   \r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            display: true,\r\n                            position:'bottom'\r\n                        },\r\n                        title: {\r\n                            display: true,\r\n                        \r\n                            text: 'Topic vs Time (in minutes)',\r\n                            fontSize: 50\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n             </div>\r\n            </div>\r\n         \r\n    )\r\n\r\n}\r\nexport default Doughnuts","import React from 'react'\r\n\r\nconst Overlay = ({ date, DateWise,setDate }) => {\r\n    return (\r\n\r\n        <div className=\"Overlay\">\r\n            <span className=\"Cancel-overlay\" onClick={() => setDate(null)}>❌</span>\r\n             <ol className = \"OverlayQn\">\r\n             {\r\n                    DateWise &&\r\n                    DateWise.get(date).map((info, index) => {\r\n                        return (\r\n                            (info.verdict === \"OK\") ?\r\n                               \r\n                                <li> <a\r\n                                    key={index}\r\n                                    href={`https://codeforces.com/problemset/problem/${info.problem.contestId}/${info.problem.index}`}\r\n                                    target=\"_blank\" rel=\"noreferrer\"><h3>{info.problem.name}</h3></a></li>\r\n                                :\r\n                                null\r\n\r\n                        )\r\n                    })\r\n                }\r\n\r\n             </ol>\r\n               \r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Overlay","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport HeatMap from './Heatmap'\r\nimport Histogram from './Histogram_RatingWise'\r\nimport Doughnuts from './Doughnut'\r\nimport Overlay from './Overlay'\r\n\r\nconst Resume = () => {\r\n  const [HANDLE, setHandle] = useState('')\r\n  const [DateWise, setDateWise] = useState()\r\n  const [YearInfo, setYearInfo] = useState([])\r\n  const [optionWise, setOptionWise] = useState([])\r\n  const [RatingInfo, setRatingInfo] = useState([])\r\n  const [TopicInfo, setTopicInfo] = useState([])\r\n  const [TypeInfo, setTypeInfo] = useState([])\r\n  const [RatingWiseAvg, setRatingWiseAvg] = useState()\r\n  const [TopicWiseAvg, setTopicWiseAvg] = useState()\r\n  const [TypeWiseAvg, setTypeWiseAvg] = useState()\r\n  const [date, setDate] = useState(null)\r\n  const [notification, setNotification] = useState('')\r\n  const handleChange = (e) => {\r\n    setHandle(e.target.value)\r\n  }\r\n  const SendRequest = async (data) => {\r\n    try {\r\n\r\n\r\n      let response = await axios.get(`https://codeforces.com/api/user.status?handle=${data}`)\r\n\r\n      let Description = new Map()\r\n      let YEAR = new Set()\r\n      let RATING = []\r\n      let TOPIC = []\r\n      let TYPE = []\r\n      let AvgRatingTime = new Map()\r\n      let AvgTopicTime = new Map()\r\n      let AvgTypeTime = new Map()\r\n      try {\r\n        let getVisualizationInfo = await axios.get(`http://localhost:3001/api/Visualize/${data}`)\r\n\r\n\r\n        for (let data of getVisualizationInfo.data.data) {\r\n\r\n          if (data.type) {\r\n            if (AvgTypeTime.get(data.type)) {\r\n              let count = Number(AvgTypeTime.get(data.type)[1]) + 1\r\n              let AvgTime = Number(AvgTypeTime.get(data.type)[0]) + Number(data.time)\r\n              AvgTypeTime.set(data.type, [AvgTime, count])\r\n            }\r\n            else {\r\n              AvgTypeTime.set(data.type, [Number(data.time), 1])\r\n            }\r\n          }\r\n          if (data.topic) {\r\n            for (let topic of data.topic) {\r\n              if (AvgTopicTime.get(topic)) {\r\n                let count = Number(AvgTopicTime.get(topic)[1]) + 1\r\n                let AvgTime = Number(AvgTopicTime.get(topic)[0]) + Number(data.time)\r\n                AvgTopicTime.set(topic, [AvgTime, count])\r\n\r\n              }\r\n              else {\r\n                AvgTopicTime.set(topic, [Number(data.time), 1])\r\n              }\r\n            }\r\n          }\r\n          if (data.rating) {\r\n            if (AvgRatingTime.get(data.rating)) {\r\n              let count = Number(AvgRatingTime.get(data.rating)[1]) + 1\r\n              let AvgTime = Number(AvgRatingTime.get(data.rating)[0]) + Number(data.time)\r\n\r\n              AvgRatingTime.set(data.rating, [AvgTime, count])\r\n\r\n            }\r\n            else {\r\n\r\n              AvgRatingTime.set(data.rating, [Number(data.time), 1])\r\n\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n      catch (Err) {\r\n        setTimeout(() => {\r\n          setNotification('')\r\n        },2500)\r\n        setNotification(\"Download our extension to visualize in-depth\");\r\n      }\r\n\r\n\r\n\r\n      for (let data of response.data.result) {\r\n\r\n        //Collecting the Year \r\n        YEAR.add(Number(new Date(data.creationTimeSeconds * 1000).getFullYear()))\r\n\r\n\r\n\r\n        if (data.author.participantType === \"CONTESTANT\" && data.verdict === \"OK\") {\r\n          for (let topic of data.problem.tags) {\r\n            if (AvgTopicTime.get(topic)) {\r\n              let count = Number(AvgTopicTime.get(topic)[1]) + 1\r\n              let AvgTime = Number(AvgTopicTime.get(topic)[0]) + data.relativeTimeSeconds\r\n              AvgTopicTime.set(topic, [AvgTime, count])\r\n\r\n            }\r\n            else {\r\n              AvgTopicTime.set(topic, [data.relativeTimeSeconds, 1])\r\n            }\r\n          }\r\n\r\n\r\n          if (AvgTypeTime.get(data.problem.index)) {\r\n            let count = Number(AvgTypeTime.get(data.problem.index)[1]) + 1\r\n            let AvgTime = Number(AvgTypeTime.get(data.problem.index)[0]) + data.relativeTimeSeconds\r\n            AvgTypeTime.set(data.problem.index, [AvgTime, count])\r\n          }\r\n          else {\r\n            AvgTypeTime.set(data.problem.index, [data.relativeTimeSeconds, 1])\r\n          }\r\n\r\n          if (AvgRatingTime.get(data.problem.rating)) {\r\n            let count = Number(AvgRatingTime.get(data.problem.rating)[1]) + 1\r\n            let AvgTime = Number(AvgRatingTime.get(data.problem.rating)[0]) + data.relativeTimeSeconds\r\n\r\n            AvgRatingTime.set(data.problem.rating, [AvgTime, count])\r\n\r\n          }\r\n          else {\r\n\r\n            AvgRatingTime.set(data.problem.rating, [data.relativeTimeSeconds, 1])\r\n\r\n          }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        /*\r\n            MAP  [key, value], key = > \"YY-MM-DD\" @String\r\n                               value => [{problem info1}, {problem info2}] @Array\r\n        */\r\n        let time = new Date(data.creationTimeSeconds * 1000)\r\n        let Key_Format = String(time.getFullYear()) + \"-\" + String(time.getMonth() + 1) + \"-\" + String(time.getDate())\r\n\r\n        if (Description.get(Key_Format)) {\r\n          Description.set(Key_Format, [...Description.get(Key_Format), data])\r\n        }\r\n        else {\r\n          Description.set(Key_Format, [data])\r\n        }\r\n\r\n      }\r\n      let optionHolder = []\r\n      for (let data of YEAR) {\r\n        optionHolder.push({ value: data, label: data })\r\n      }\r\n\r\n\r\n\r\n      RATING = [...AvgRatingTime.keys()]\r\n      TOPIC = [...AvgTopicTime.keys()]\r\n      TYPE = [...AvgTypeTime.keys()]\r\n      RATING.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n\r\n\r\n\r\n      setOptionWise([...optionHolder])\r\n      setDateWise(Description)\r\n      setTopicWiseAvg(AvgTopicTime)\r\n      setRatingWiseAvg(AvgRatingTime)\r\n      setTypeWiseAvg(AvgTypeTime)\r\n      setYearInfo([...YEAR])\r\n      setRatingInfo([...RATING])\r\n      setTopicInfo([...TOPIC])\r\n      setTypeInfo([...TYPE])\r\n\r\n\r\n    } catch (err) {\r\n\r\n      setTimeout(() => {\r\n        setNotification('')\r\n      },2500)\r\n      setNotification(\"Codeforces api Failed to fetch the handle information\");\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    SendRequest(HANDLE)\r\n  }\r\n  return (\r\n    <div className = \"VizContainer\">\r\n       {notification.length > 0 &&\r\n                                    <div className=\"Notification\" style={{ backgroundColor: \"red\" }}>\r\n                                        <h3> {notification}</h3>\r\n                                    </div>\r\n                                }\r\n      {\r\n        YearInfo.length === 0 &&\r\n\r\n        <>\r\n          <h1 style={{ textAlign: 'center', marginTop: '7%', position: \"relative\" }}>Enter the Codeforces Handle</h1>\r\n          <form onSubmit={handleSubmit} className=\"INPUT\">\r\n\r\n            <div className=\"ui action input \">\r\n\r\n\r\n\r\n              <input\r\n\r\n                type=\"text\"\r\n                value={HANDLE}\r\n                placeholder=\"Errichto\"\r\n                onChange={(e) => handleChange(e)} />\r\n              <button className=\"ui icon button\">\r\n                <i className=\"arrow right icon\" />\r\n              </button>\r\n\r\n            </div>\r\n          </form>\r\n        </>\r\n\r\n\r\n      }\r\n      {\r\n        YearInfo.length > 0 && date === null ?\r\n          <>\r\n            <HeatMap\r\n              DateWise={DateWise}\r\n              YearInfo={YearInfo}\r\n              optionWise={optionWise}\r\n              setDate={setDate}\r\n            />\r\n            <Histogram\r\n              RatingInfo={RatingInfo}\r\n              RatingWiseAvg={RatingWiseAvg}\r\n              TypeInfo={TypeInfo}\r\n              TypeWiseAvg={TypeWiseAvg}\r\n            />\r\n            <Doughnuts\r\n              TopicInfo={TopicInfo}\r\n              TopicWiseAvg={TopicWiseAvg}\r\n\r\n            />\r\n\r\n          </>\r\n          :\r\n          YearInfo.length > 0 ?\r\n            <Overlay date={date} setDate={setDate} DateWise={DateWise} />\r\n            : null\r\n      }\r\n     \r\n    </div>\r\n  )\r\n}\r\nexport default Resume","import React from 'react'\r\nconst NotFound = () => {\r\n    return(\r\n        <div>\r\n            404 Not found\r\n        </div>\r\n    )\r\n}\r\nexport default NotFound","import React, {useContext } from 'react'\r\n\r\nimport { showErrMsg,showSuccessMsg } from '../../utils/notification/Notification'\r\nimport { UserContext } from '../../contexts/UserContext'\r\nimport axios from 'axios'\r\n\r\n\r\nconst ForgotPassword = () => {\r\n   const {USER}= useContext(UserContext)\r\n   const [user, setUser] = USER\r\n\r\n    const { email,err, success } = user\r\n    \r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n\r\n        setUser({...user, [name]: value, err: '', success: ''})\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        try{\r\n           const res = await axios.post('/api/Users/forgotPassword', {\r\n               email: user.email\r\n           })\r\n           setUser({...user, err: '', success: res.data.msg})\r\n        }catch(err){\r\n            err.response.data.msg &&\r\n            setUser({...user,  err: err.response.data.msg, success: ''})\r\n        }\r\n    } \r\n    \r\n      \r\n        return (\r\n            <div className=\"login_page\">\r\n                <h2>Forgot password?</h2>\r\n                {err && showErrMsg(err)}\r\n                {success && showSuccessMsg(success)}\r\n                <form onSubmit = {handleSubmit}>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter email address\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            name=\"email\"\r\n                            onChange = {handleChangeInput} />\r\n                    </div>\r\n                   \r\n                    <div className = \"row\">\r\n                        <button type = \"submit\">Submit</button>\r\n                       \r\n                    </div>\r\n                </form>\r\n               \r\n            </div>\r\n        )\r\n      \r\n    \r\n    \r\n}\r\nexport default ForgotPassword","import React, { useState, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { UserContext } from '../../contexts/UserContext'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\r\nimport { isLength, isEmpty, isMatch } from '../../utils/validation/Validation'\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [cf_password, setCfPassword] = useState('')\r\n    const { access_token } = useParams()\r\n    const [err, setErr] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n    const {USER}= useContext(UserContext)\r\n   const [user, setUser] = USER\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        if (isEmpty(password)) {\r\n            return setUser({ ...user, err: \"Please fill in all fields\", success: '' })\r\n        }\r\n\r\n        if (!isLength(password)) {\r\n            return setUser({ ...user, err: \"Password must be atleast 6 characters. \", success: '' })\r\n        }\r\n        if (!isMatch(password, cf_password)) {\r\n            return setUser({ ...user, err: \"Password did not match\", success: '' })\r\n        }\r\n\r\n        try {\r\n            if (access_token) {\r\n            \r\n                const res = await axios.post('/api/Users/resetPassword', {\r\n                    \r\n                    password: password\r\n                },{\r\n                    headers: {\"Authorization\": access_token},\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    window.location.href = \"/\"\r\n                }, 3000)\r\n                setSuccess(res.data.msg)\r\n            }\r\n        } catch (err) {\r\n            err.response.data.msg &&\r\n\r\n                setErr(err.response.data.msg)\r\n        }\r\n    }\r\n    const handleChangeInput = e => {\r\n        const data = e.target.value\r\n        if (e.target.name === \"password\") {\r\n            setPassword(data)\r\n        }\r\n        else {\r\n            setCfPassword(data)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div className=\"login_page\">\r\n\r\n            <h2>Reset your password</h2>\r\n            {err && showErrMsg(err)}\r\n            {success && showSuccessMsg(success)}\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        name=\"password\"\r\n                        onChange={handleChangeInput} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"cf_assword\">Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm your password\"\r\n                        id=\"cf_password\"\r\n                        value={cf_password}\r\n                        name=\"cf_password\"\r\n                        onChange={handleChangeInput} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button type=\"submit\">Reset</button>\r\n\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ResetPassword","export default __webpack_public_path__ + \"static/media/VizSvg.34fcf5f8.svg\";","export default __webpack_public_path__ + \"static/media/TrainSvg.f617860b.svg\";","export default __webpack_public_path__ + \"static/media/Faltu.8c69836d.svg\";","import React from 'react'\r\n\r\nimport VizSvg from '../Assets/VizSvg.svg'\r\nimport TrainSvg from '../Assets/TrainSvg.svg'\r\nimport Faltu from '../Assets/Faltu.svg'\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <div className=\"homeBody\">\r\n            <div className=\"midSection\">\r\n            <h1 style = {{textAlign:\"center\"}}>Introducing filterforces...</h1>\r\n            <div className = \"Addvertisement\">\r\n                 <h3>Download our Chome Extension to Visualize in-depth</h3>\r\n                 <button onClick = {() => alert(\"Will be releasing soon...\")}>Download now</button>\r\n            </div>\r\n                <div className=\"Video-midSection\">\r\n                     \r\n                  \r\n                     \r\n                    <iframe  frameBorder=\"1\" allow=\"autoplay; picture-in-picture\" title=\"YouTube Embed\"\r\n                        src={\"https://www.youtube.com/embed/tgbNymZ7vqY\"}>\r\n                    </iframe>\r\n                   \r\n                    <img src = {Faltu} alt = \"SVG\"/>\r\n                </div>\r\n              \r\n                <div className=\"Train-midSection\">\r\n                     <img src = {TrainSvg} alt = \"SVG\"/>\r\n                     <div className = \"Description-middelSection\">\r\n                        <h2>Get all the questions solved by your friends</h2>\r\n                        <h3>Enjoy by filtering problems</h3>\r\n                     </div>\r\n                </div>\r\n                <div className=\"Viz-midSection\">\r\n              \r\n                     <div className = \"Description-middelSection\">\r\n                         <h2>Visualization</h2>\r\n                   <ol>\r\n                       <li><h3>Watch the Introduction video...</h3></li>\r\n                       <li><h3>Download our Extension after logging in</h3></li>\r\n                       <li><h3>Start solving problems by starting the timer and record the time</h3></li>\r\n                       <li><h3>Go to Visualize Route and check your growth</h3></li>\r\n  \r\n                   </ol>\r\n                     </div>\r\n                     <img src = {VizSvg} alt = \"SVG\"/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"footer\">\r\n\r\n\r\n                <h4><i className=\"linkedin icon\" /> <a href=\"https://www.linkedin.com/in/shreenanda-p-127242147/\" target=\"_blank\" rel=\"noreferrer\" >Linked in </a><span>      </span><i className=\"github icon\" /> <a href=\"https://github.com/shreenanda-8\" target=\"_blank\" rel=\"noreferrer\" >Github</a></h4>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HomePage","import React, { useContext } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Login from './auth/Login'\r\nimport Register from './auth/Register'\r\nimport ActivationEmail from './auth/ActivationEmail'\r\nimport Train from '../Training/Train'\r\nimport Resume from \"../Visualizer/Resume\"\r\nimport NotFound from '../notFound/NotFound'\r\nimport { UserContext } from '../../contexts/UserContext'\r\nimport ForgotPassword from '../forgotPassword/ForgotPassword'\r\nimport ResetPassword from '../forgotPassword/ResetPassword'\r\nimport HomePage from '../HomePage'\r\n\r\nconst Body = () => {\r\n    const {LOGIN_STATE} = useContext(UserContext)\r\n \r\n    const [loginState] = LOGIN_STATE\r\n    return (\r\n        <div >\r\n            <section className = \"BODY\">\r\n                <Switch>\r\n                    <Route path=\"/login\" component={loginState ? NotFound : Login} exact />\r\n                    <Route path=\"/register\" component={ loginState ? NotFound : Register} exact />\r\n                    <Route path=\"/user/activate/:activation_token\" component={ActivationEmail} exact />\r\n                    <Route path = \"/user/reset/:access_token\" component = {ResetPassword} exact/>\r\n                    <Route path=\"/train\" component={Train} exact />\r\n                    <Route path = \"/Visualize\" component = {Resume} exact />\r\n                    <Route path = \"/\" component = {HomePage} />\r\n                    <Route path = \"/forgotPassword\" component = {loginState ? NotFound : ForgotPassword} exact/>\r\n                </Switch>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Body","import React , {useContext, useEffect} from 'react'\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nimport Header from './components/header/Header'\r\nimport Body from './components/body/Body'\r\n\r\nimport { UserContext } from './contexts/UserContext'\r\nconst App = () => {\r\n    \r\n   const {LOGIN_STATE} = useContext(UserContext)\r\n   \r\n    const [loginState,setLoginState] = LOGIN_STATE\r\n  \r\n   \r\n    useEffect( () => {\r\n        const dummy = async() => {\r\n            const firstLogin = localStorage.getItem('firstLogin')\r\n           \r\n            if(firstLogin)\r\n            { \r\n            \r\n              \r\n                \r\n                \r\n                setLoginState(true)\r\n             \r\n             \r\n               \r\n                \r\n            }\r\n        }\r\n        dummy()\r\n    \r\n    }, [loginState, setLoginState])\r\n    return (\r\n      \r\n       \r\n        \r\n <Router>\r\n          \r\n          <div className = \"App\">\r\n              <Header />\r\n              <Body/>\r\n           </div>\r\n         \r\n       </Router>\r\n        \r\n    )\r\n}\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.js';\r\nimport { UserProvider } from './contexts/UserContext';\r\n// import './styles/fun.css'\r\n// import './styles/home.css'\r\nimport './index.css'\r\nconst Rand = () => {\r\n    return(\r\n        <UserProvider>\r\n            <App/>\r\n        </UserProvider>\r\n    )\r\n}\r\nReactDOM.render(<Rand/>, document.getElementById('root'));\r\n"],"sourceRoot":""}